



BROKER SCHEMA HL7CoreApplication

PATH HL7CoreApplication;

CREATE PROCEDURE CreateMSH(IN msg01 CHARACTER, in msg02 CHARACTER, IN msgId CHARACTER, INOUT refHL7 REFERENCE) BEGIN
	DECLARE refSegment REFERENCE TO refHL7;
	CREATE LASTCHILD OF refSegment AS refSegment NAMESPACE ns6 NAME 'MSH';
	SET refSegment.ns6:"MSH.1.FieldSeparator" = '|';
	SET refSegment.ns6:"MSH.2.ServiceString".ns6:ComponentSeparator = '^';
	SET refSegment.ns6:"MSH.2.ServiceString".ns6:RepeatSeparator = '~';
	SET refSegment.ns6:"MSH.2.ServiceString".ns6:EscapeCharacter = '\';
	SET refSegment.ns6:"MSH.2.ServiceString".ns6:SubComponentSeparator = '&';
	SET refSegment.ns6:"MSH.3.SendingApplication".ns6:"HD.1" = 'IBM_IIB';
	SET refSegment.ns6:"MSH.4.SendingFacility".ns6:"HD.1" = 'IBM';
	SET refSegment.ns6:"MSH.5.ReceivingApplication".ns6:"HD.1" = 'EHR_MEDARCHIVER';
	SET refSegment.ns6:"MSH.6.ReceivingFacility".ns6:"HD.1" = 'MEDARCHIVER';
	SET refSegment.ns6:"MSH.7.DateTimeOfMessage".ns6:"TS.1" = CAST (CURRENT_TIMESTAMP AS CHARACTER FORMAT 'YYYYMMddHHmmss');
	--SET refSegment.ns6:"MSH.8.Security". = ;
	SET refSegment.ns6:"MSH.9.MessageType".ns6:"MSG.1" = msg01;
	SET refSegment.ns6:"MSH.9.MessageType".ns6:"MSG.2" = msg02;
	SET msgId = COALESCE(NULLIF(msgId,''),GetUUID());
	SET refSegment.ns6:"MSH.10.MessageControlID" = REPLACE(msgId,'.','');
	-- SET refSegment.ns6:"MSH.9.MessageType".ns6:"MSG.1" = 'ORU';
	-- SET refSegment.ns6:"MSH.9.MessageType".ns6:"MSG.2" = 'R01';
	--SET refSegment.ns6:"MSH.10.MessageControlID" = '25233631';
	SET refSegment.ns6:"MSH.11.ProcessingID".ns6:"PT.1" = 'P';
	SET refSegment.ns6:"MSH.12.VersionID".ns6:"VID.1" = '2.5.1';

END;

CREATE PROCEDURE CreateEVN(INOUT refHL7 REFERENCE) BEGIN
	DECLARE refSegment REFERENCE TO refHL7;
	CREATE LASTCHILD OF refSegment AS refSegment NAMESPACE ns6 NAME 'anyHL7Segment';
	CREATE LASTCHILD OF refSegment AS refSegment NAMESPACE ns6 NAME 'EVN';
	--SET refSegment.ns6:"EVN.1.EventTypeCode" = '';
	SET refSegment.ns6:"EVN.2.RecordedDateTime".ns6:"TS.1" = CAST (CURRENT_TIMESTAMP AS CHARACTER FORMAT 'YYYYMMddHHmmss');
	--SET refSegment.ns6:"EVN.3.DateTimePlannedEvent" = '';
	--SET refSegment.ns6:"EVN.4.EventReasonCode" = '';
	--SET refSegment.ns6:"EVN.5.OperatorID" = '';
	SET refSegment.ns6:"EVN.6.EventOccurred".ns6:"TS.1" = CAST (CURRENT_TIMESTAMP AS CHARACTER FORMAT 'YYYYMMddHHmmss');
	--SET refSegment.ns6:"EVN.7.EventFacility" = '';

END;

CREATE PROCEDURE CreatePID(IN xmlModel REFERENCE, INOUT refHL7 REFERENCE) BEGIN
	--decomment to enable autocomplete: COMMENT BEFORE DEPLOYMENT!
	--DECLARE xmlModel REFERENCE TO InputRoot.XMLNSC.ns:senderRequest.writeParametersRequest.measurement;
	DECLARE refPatient REFERENCE TO xmlModel;
	MOVE refPatient FIRSTCHILD NAME 'patient';
--	if (refPatient.patientIdentifierList IS NOT NULL AND refPatient.name IS NOT NULL) THEN
		DECLARE refSegment REFERENCE TO refHL7;
		CREATE LASTCHILD OF refSegment AS refSegment NAMESPACE ns6 NAME 'anyHL7Segment';
		CREATE LASTCHILD OF refSegment AS refSegment NAMESPACE ns6 NAME 'PID';
		--SET refSegment.ns6:"PID.1.SetIDPID" = ;
		--forse Ã¨ il braccialetto???
		--SET refSegment.ns6:"PID.2.PatientID" = ;
		SET refSegment.ns6:"PID.3.PatientIdentifierList".ns6:"CX.1" = refPatient.patientIdentifierList; --'131175600';
		--SET refSegment.ns6:"PID.4.AlternatePatientIDPID" = ;
		SET refSegment.ns6:"PID.5.PatientName".ns6:"XPN.1".ns6:"FN.1" = refPatient.name;
		if (xmlModel.surname IS NOT NULL) THEN
			SET refSegment.ns6:"PID.5.PatientName".ns6:"XPN.2" = refPatient.surname;
		END IF;
		--SET refSegment.ns6:"PID.6.MothersMaidenName" = ;
		SET refSegment.ns6:"PID.7.DateTimeOfBirth".ns6:"TS.1" = refPatient.birthdate;
		SET refSegment.ns6:"PID.8.AdministrativeSex" = refPatient.sex;
		--SET refSegment.ns6:"PID.9.PatientAlias" = ;
		SET refSegment.ns6:"PID.10.Race" = refPatient.race;
		--SET refSegment.ns6:"PID.11.PatientAddress".ns6:"XAD.1".ns6:"SAD.1" = 'via maggini 200';
		--SET refSegment.ns6:"PID.11.PatientAddress".ns6:"XAD.5" = '30100';
		--SET refSegment.ns6:"PID.11.PatientAddress".ns6:"XAD.8" = '027042';
		--SET refSegment.ns6:"PID.12.CountyCode" = ;
		--SET refSegment.ns6:"PID.13.PhoneNumberHome" = ;
		--SET refSegment.ns6:"PID.14.PhoneNumberBusiness" = ;
		--SET refSegment.ns6:"PID.15.PrimaryLanguage" = ;
		--SET refSegment.ns6:"PID.16.MaritalStatus" = ;
		--SET refSegment.ns6:"PID.17.Religion" = ;
		SET refSegment.ns6:"PID.18.PatientAccountNumber".ns6:"CX.1" = refPatient.fiscalcode;
		--SET refSegment.ns6:"PID.19.SSNNumberPatient" = ;
		--SET refSegment.ns6:"PID.20.DriversLicenseNumberPatient" = ;
		--SET refSegment.ns6:"PID.21.MothersIdentifier" = ;
		--SET refSegment.ns6:"PID.22.EthnicGroup" = ;
		--SET refSegment.ns6:"PID.23.BirthPlace" = ;
		--SET refSegment.ns6:"PID.24.MultipleBirthIndicator" = ;
		--SET refSegment.ns6:"PID.25.BirthOrder" = ;
		--SET refSegment.ns6:"PID.26.Citizenship" = ;
		--SET refSegment.ns6:"PID.27.VeteransMilitaryStatus" = ;
		--SET refSegment.ns6:"PID.28.Nationality" = ;
		--SET refSegment.ns6:"PID.29.PatientDeathDateandTime" = ;
		--SET refSegment.ns6:"PID.30.PatientDeathIndicator" = ;
		--SET refSegment.ns6:"PID.31.IdentityUnknownIndicator" = ;
		--SET refSegment.ns6:"PID.32.IdentityReliabilityCode" = ;
		--SET refSegment.ns6:"PID.33.LastUpdateDateTime" = ;
		--SET refSegment.ns6:"PID.34.LastUpdateFacility" = ;
		--SET refSegment.ns6:"PID.35.SpeciesCode" = ;
		--SET refSegment.ns6:"PID.36.BreedCode" = ;
		--SET refSegment.ns6:"PID.37.Strain" = ;
		--SET refSegment.ns6:"PID.38.ProductionClassCode" = ;
		--SET refSegment.ns6:"PID.39.TribalCitizenship" = ;
	--END IF;
END;

CREATE PROCEDURE CreatePV1(IN xmlModel REFERENCE, INOUT refHL7 REFERENCE) BEGIN
	--decomment to enable autocomplete: COMMENT BEFORE DEPLOYMENT!
	--DECLARE xmlModel REFERENCE TO InputRoot.XMLNSC.ns:senderRequest.writeParametersRequest.ns:measurement;
	DECLARE refPatient REFERENCE TO xmlModel;
	MOVE refPatient FIRSTCHILD NAME 'patient';
	MOVE refPatient FIRSTCHILD NAME 'admission';

	DECLARE refSegment REFERENCE TO refHL7;
	CREATE LASTCHILD OF refSegment AS refSegment NAMESPACE ns6 NAME 'anyHL7Segment';
	CREATE LASTCHILD OF refSegment AS refSegment NAMESPACE ns6 NAME 'PV1';
	--SET refSegment.ns6:"PV1.1.SetIDPV1"
	SET refSegment.ns6:"PV1.2.PatientClass" = COALESCE(refPatient.class,'I');
	--SET refSegment.ns6:"PV1.3.AssignedPatientLocation"
	--SET refSegment.ns6:"PV1.4.AdmissionType"
	--SET refSegment.ns6:"PV1.5.PreadmitNumber"
	--SET refSegment.ns6:"PV1.6.PriorPatientLocation"
	--SET refSegment.ns6:"PV1.7.AttendingDoctor"
	--SET refSegment.ns6:"PV1.8.ReferringDoctor"
	--SET refSegment.ns6:"PV1.9.ConsultingDoctor"
	--SET refSegment.ns6:"PV1.10.HospitalService"
	--SET refSegment.ns6:"PV1.11.TemporaryLocation"
	--SET refSegment.ns6:"PV1.12.PreadmitTestIndicator"
	--SET refSegment.ns6:"PV1.13.ReadmissionIndicator"
	--SET refSegment.ns6:"PV1.14.AdmitSource"
	SET refSegment.ns6:"PV1.15.AmbulatoryStatus" = '';
	--SET refSegment.ns6:"PV1.16.VIPIndicator"
	--SET refSegment.ns6:"PV1.17.AdmittingDoctor"
	--SET refSegment.ns6:"PV1.18.PatientType"
	SET refSegment.ns6:"PV1.19.VisitNumber".ns6:"CX.1" = refPatient.nosologicId; --'17/000004';
	--SET refSegment.ns6:"PV1.20.FinancialClass"
	--SET refSegment.ns6:"PV1.21.ChargePriceIndicator"
	--SET refSegment.ns6:"PV1.22.CourtesyCode"
	--SET refSegment.ns6:"PV1.23.CreditRating"
	SET refSegment.ns6:"PV1.24.ContractCode" = '';
	SET refSegment.ns6:"PV1.25.ContractEffectiveDate" = '';
	SET refSegment.ns6:"PV1.26.ContractAmount" = '';
	SET refSegment.ns6:"PV1.27.ContractPeriod" = '';
	--SET refSegment.ns6:"PV1.28.InterestCode"
	--SET refSegment.ns6:"PV1.29.TransfertoBadDebtCode"
	--SET refSegment.ns6:"PV1.30.TransfertoBadDebtDate"
	--SET refSegment.ns6:"PV1.31.BadDebtAgencyCode"
	--SET refSegment.ns6:"PV1.32.BadDebtTransferAmount"
	--SET refSegment.ns6:"PV1.33.BadDebtRecoveryAmount"
	--SET refSegment.ns6:"PV1.34.DeleteAccountIndicator"
	--SET refSegment.ns6:"PV1.35.DeleteAccountDate"
	--SET refSegment.ns6:"PV1.36.DischargeDisposition"
	--SET refSegment.ns6:"PV1.37.DischargedtoLocation"
	--SET refSegment.ns6:"PV1.38.DietType"
	--SET refSegment.ns6:"PV1.39.ServicingFacility"
	--SET refSegment.ns6:"PV1.40.BedStatus"
	--SET refSegment.ns6:"PV1.41.AccountStatus"
	--SET refSegment.ns6:"PV1.42.PendingLocation"
	--SET refSegment.ns6:"PV1.43.PriorTemporaryLocation"
	--SET refSegment.ns6:"PV1.44.AdmitDateTime".ns6:"TS.1" = '20170308153035';
	--SET refSegment.ns6:"PV1.45.DischargeDateTime"
	--SET refSegment.ns6:"PV1.46.CurrentPatientBalance"
	--SET refSegment.ns6:"PV1.47.TotalCharges"
	--SET refSegment.ns6:"PV1.48.TotalAdjustments"
	--SET refSegment.ns6:"PV1.49.TotalPayments"
	--SET refSegment.ns6:"PV1.50.AlternateVisitID"
	--SET refSegment.ns6:"PV1.51.VisitIndicator"
	--SET refSegment.ns6:"PV1.52.OtherHealthcareProvider"

END;

CREATE PROCEDURE CreateOBR(IN refParameter REFERENCE, INOUT refHL7 REFERENCE, IN sequence INTEGER) BEGIN
	--decomment to enable autocomplete: COMMENT BEFORE DEPLOYMENT!
	--DECLARE xmlModel REFERENCE TO InputRoot.XMLNSC.ns:senderRequest.writeParametersRequest.ns:measurement;

	DECLARE refSegment REFERENCE TO refHL7;
	CREATE LASTCHILD OF refSegment AS refSegment NAMESPACE ns6 NAME 'anyHL7Segment';
	CREATE LASTCHILD OF refSegment AS refSegment NAMESPACE ns6 NAME 'OBR';

	SET refSegment.ns6:"OBR.1.SetIDOBR" = sequence;
	--SET refSegment.ns6:"OBR.2.PlacerOrderNumber". = ;
	--Parameter.id = id univoco generato da BPM oppure se null generato da IIB come timestamp
	--Parameter.taskId = id del task utilizzato per Issues e measurement
	DECLARE id CHARACTER COALESCE(refParameter.id, CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'YYYYMMddHHmmss'));
	SET id = REPLICATE('0',14-LENGTH(id)) || id;
	--task
	SET refSegment.ns6:"OBR.3.FillerOrderNumber".ns6:"EI.1" = REPLACE(refParameter.taskId,'.','') || id;
	
--	IF refSegment.ns6:"OBR.3.FillerOrderNumber".ns6:"EI.1" IS NOT NUMBER THEN
--		THROW USER EXCEPTION CATALOG 'MyCatalog' MESSAGE 2951 VALUES('task ID non numerico') ;
--	END IF;
	SET refSegment.ns6:"OBR.4.UniversalServiceIdentifier".ns6:"CE.1" = 'IBMAPPLE';
	--SET refSegment.ns6:"OBR.5.Priority".;
	--SET refSegment.ns6:"OBR.6.RequestedDateTime". = ;
	IF(LENGTH(refParameter.date) = 14 ) THEN
		SET refSegment.ns6:"OBR.7.ObservationDateTime".ns6:"TS.1" = COALESCE(refParameter.date,CAST (CURRENT_TIMESTAMP AS CHARACTER FORMAT 'YYYYMMddHHmmss'));
	ELSEIF (LENGTH(refParameter.date) = 8 ) THEN
		SET refSegment.ns6:"OBR.7.ObservationDateTime".ns6:"TS.1" = COALESCE(refParameter.date,CAST (CURRENT_TIMESTAMP AS CHARACTER FORMAT 'YYYYMMddHHmmss'));
	ELSE
		SET refSegment.ns6:"OBR.7.ObservationDateTime".ns6:"TS.1" = CAST (CURRENT_TIMESTAMP AS CHARACTER FORMAT 'YYYYMMddHHmmss');
	END IF;
	
	
	--SET refSegment.ns6:"OBR.7.ObservationDateTime".ns6:"TS.1" = COALESCE(refParameter.date,CAST (CURRENT_TIMESTAMP AS CHARACTER FORMAT 'YYYYMMddHHmmss'));
	--SET refSegment.ns6:"OBR.8.ObservationEndDateTime";
	--SET refSegment.ns6:"OBR.9.CollectionVolume". = ;
	--SET refSegment.ns6:"OBR.10.CollectorIdentifier".;
	--SET refSegment.ns6:"OBR.11.SpecimenActionCode". = ;
	--SET refSegment.ns6:"OBR.12.DangerCode". = ;
	--SET refSegment.ns6:"OBR.13.RelevantClinicalInfo". = ;
	--SET refSegment.ns6:"OBR.14.SpecimenReceivedDateTime". = ;
	--SET refSegment.ns6:"OBR.15.SpecimenSource". = ;
	--SET refSegment.ns6:"OBR.16.OrderingProvider". = ;
	--SET refSegment.ns6:"OBR.17.OrderCallbackPhoneNumber". = ;
	--SET refSegment.ns6:"OBR.18.PlacerField1". = ;
	--SET refSegment.ns6:"OBR.19.PlacerField2". = ;
	--SET refSegment.ns6:"OBR.20.FillerField1". = ;
	--SET refSegment.ns6:"OBR.21.FillerField2". = ;
	--SET refSegment.ns6:"OBR.22.ResultsRptStatusChngDateTime". = ;
	--SET refSegment.ns6:"OBR.23.ChargetoPractice". = ;
	--SET refSegment.ns6:"OBR.24.DiagnosticServSectID". = ;
	--SET refSegment.ns6:"OBR.25.ResultStatus". = ;
	--SET refSegment.ns6:"OBR.26.ParentResult". = ;
	--SET refSegment.ns6:"OBR.27.QuantityTiming". = ;
	--SET refSegment.ns6:"OBR.28.ResultCopiesTo". = ;
	--SET refSegment.ns6:"OBR.29.Parent". = ;
	--SET refSegment.ns6:"OBR.30.TransportationMode". = ;
	--SET refSegment.ns6:"OBR.31.ReasonforStudy". = ;
	--SET refSegment.ns6:"OBR.32.PrincipalResultInterpreter". = ;
	--SET refSegment.ns6:"OBR.33.AssistantResultInterpreter". = ;
	SET refSegment.ns6:"OBR.34.Technician".ns6:"NDL.1".ns6:"CNN.1" = refParameter.userId; --'CPORTELLI';
	--SET refSegment.ns6:"OBR.35.Transcriptionist". = ;
	--SET refSegment.ns6:"OBR.36.ScheduledDateTime". = ;
	--SET refSegment.ns6:"OBR.37.NumberofSampleContainers". = ;
	--SET refSegment.ns6:"OBR.38.TransportLogisticsofCollectedSample". = ;
	--SET refSegment.ns6:"OBR.39.CollectorsComment". = ;
	--SET refSegment.ns6:"OBR.40.TransportArrangementResponsibility". = ;
	--SET refSegment.ns6:"OBR.41.TransportArranged". = ;
	--SET refSegment.ns6:"OBR.42.EscortRequired". = ;
	--SET refSegment.ns6:"OBR.43.PlannedPatientTransportComment". = ;
	--SET refSegment.ns6:"OBR.44.ProcedureCode". = ;
	--SET refSegment.ns6:"OBR.45.ProcedureCodeModifier". = ;
	--SET refSegment.ns6:"OBR.46.PlacerSupplementalServiceInformation". = ;
	--SET refSegment.ns6:"OBR.47.FillerSupplementalServiceInformation". = ;
	--SET refSegment.ns6:"OBR.48.MedicallyNecessaryDuplicateProcedureReason". = ;
	--SET refSegment.ns6:"OBR.49.ResultHandling". = ;
	--SET refSegment.ns6:"OBR.50.ParentUniversalServiceIdentifier". = ;

END;

CREATE PROCEDURE CreateOBX(IN refParameter REFERENCE, INOUT refHL7 REFERENCE) BEGIN
	--decomment to enable autocomplete: COMMENT BEFORE DEPLOYMENT!
	--DECLARE xmlModel REFERENCE TO InputRoot.XMLNSC.ns:senderRequest.writeParametersRequest.measurement.values;
	--CREA SEQUENZA OSSERVAZIONI OBX
	DECLARE sequence INTEGER 1;
	MOVE refParameter FIRSTCHILD NAME 'values';
	WHILE LASTMOVE(refParameter) DO
		IF NULLIF(refParameter.value,'') IS NOT NULL AND NULLIF(refParameter.value,'null') IS NOT NULL AND NULLIF(refParameter.value,'null^null') IS NOT NULL THEN
			--CREA OBX
			IF NOT CONTAINS (refParameter.value,'null') THEN
				DECLARE refSegment REFERENCE TO refHL7;
				CREATE LASTCHILD OF refSegment AS refSegment NAMESPACE ns6 NAME 'anyHL7Segment';
				CREATE LASTCHILD OF refSegment AS refSegment NAMESPACE ns6 NAME 'OBX';
				--aggiungo alla sequenza anche l'ID del task
						
				SET refSegment.ns6:"OBX.1.SetIDOBX" = sequence;
				SET refSegment.ns6:"OBX.2.ValueType" = 'NM';
				SET refSegment.ns6:"OBX.3.ObservationIdentifier".ns6:"CE.1" = refParameter.measureId;
				SET refSegment.ns6:"OBX.3.ObservationIdentifier".ns6:"CE.2" = refParameter.measureName;
				SET refSegment.ns6:"OBX.3.ObservationIdentifier".ns6:"CE.3" = 'SRT';
				--SET refSegment.ns6:"OBX.4.ObservationSubId". = ;
				
				
				--INIZIO MODIFICA PER MEDARCHIVER, CODIFICA DEI CAMPI SI/NO CHE VIENE DA BPM
				
				IF (refParameter.measureId = 'SC001') OR (refParameter.measureId = 'SPO2001') OR (refParameter.measureId = 'AS001')
					OR (refParameter.measureId = 'AS002') OR (refParameter.measureId = 'AS003') OR (refParameter.measureId = 'AS006') OR (refParameter.measureId = 'AS010')
					OR (refParameter.measureId = 'AS011') OR (refParameter.measureId = 'DIU001') OR (refParameter.measureId = 'DIU002') OR (refParameter.measureId = 'DIU003') 
					OR (refParameter.measureId = 'DIU005') OR (refParameter.measureId = 'DIU006') OR (refParameter.measureId = 'DIU009') OR (refParameter.measureId = 'DIU013')
					OR (refParameter.measureId = 'DIU014') OR (refParameter.measureId = 'SNG001') OR (refParameter.measureId = 'SNG008') OR (refParameter.measureId = 'DN001')
					OR (refParameter.measureId = 'DN002') OR (refParameter.measureId = 'DN008') OR (refParameter.measureId = 'DN009') OR (refParameter.measureId = 'DN013')
					OR (refParameter.measureId = 'DN015') OR (refParameter.measureId = 'DN016') OR (refParameter.measureId = 'DN019') OR (refParameter.measureId = 'DN020')
					OR (refParameter.measureId = 'DN021') OR (refParameter.measureId = 'DN022') OR (refParameter.measureId = 'MC001') OR (refParameter.measureId = 'MC002')
					OR (refParameter.measureId = 'MC007') OR (refParameter.measureId = 'VAS001') OR (refParameter.measureId = 'VAS005') OR (refParameter.measureId = 'AV001') 
					OR (refParameter.measureId = 'AV002') OR (refParameter.measureId = 'AV005') OR (refParameter.measureId = 'AV006') OR (refParameter.measureId = 'AV008') 
					OR (refParameter.measureId = 'RPV001') OR (refParameter.measureId = 'RPM001') OR (refParameter.measureId = 'RPM002') OR (refParameter.measureId = 'RMAI001')
					OR (refParameter.measureId = 'RMAI002') OR (refParameter.measureId = 'RMAI003') OR (refParameter.measureId = 'RFR001') OR (refParameter.measureId = 'RFR002')
					OR (refParameter.measureId = 'RFR003') OR (refParameter.measureId = 'RFR004') OR (refParameter.measureId = 'CG001') THEN
					
					IF (refParameter.value = 0) THEN
						SET refSegment.ns6:"OBX.5.ObservationValue" = refParameter.value || '^NO';
					ELSEIF (refParameter.value = 1) THEN
						SET refSegment.ns6:"OBX.5.ObservationValue" = refParameter.value || '^SI';
					END IF;
				ELSE
					SET refSegment.ns6:"OBX.5.ObservationValue" = refParameter.value;
				END IF;
				
--				DECLARE prima CHARACTER;
--				DECLARE dopo CHARACTER;
--				DECLARE replace CHARACTER;
--				SET replace = REPLACE (refParameter.value, '\n', 'pippo');
--				SET prima = SUBSTRING(refParameter.value BEFORE '\n');
--				IF NULLIF(prima, '') IS NOT NULL THEN
--					SET dopo = SUBSTRING(refParameter.value AFTER '\n');
--					SET refParameter.value = prima || '\\n' || dopo;
--				ELSE
--					DECLARE niente CHARACTER;
--				END IF;
--				Declare TEMP CHARACTER;
--				Declare DeleteChar CHARACTER;
--				SET DeleteChar=CAST('0D' AS CHARACTER CCSID refParameter.value);
--				SET TEMP=REPLACE(TEMP, DeleteChar , '');
	--			IF (refParameter.measureId = 'SC001') AND (refParameter.value = 0) THEN
	--				SET refSegment.ns6:"OBX.5.ObservationValue" = refParameter.value || '^NO';
	--			ELSEIF (refParameter.measureId = 'SC001') AND (refParameter.value = 1) THEN
	--				SET refSegment.ns6:"OBX.5.ObservationValue" = refParameter.value || '^SI';
	--			ELSE
	--				SET refSegment.ns6:"OBX.5.ObservationValue" = refParameter.value;
	--			END IF;
				--FINE MODIFICA
				
				IF (refParameter.units IS NOT NULL) THEN
					--SET OutputRoot.DFDL.ns6:HL7.ns6:anyHL7Segment[SEQUENCE + 4].ns6:OBX.ns6:"OBX.6.Units".ns6:"CE.1"  = xmlModel.units;
					SET refSegment.ns6:"OBX.6.Units".ns6:"CE.1"  = refParameter.units;
				END IF;
				--SET refSegment.ns6:"OBX.7.ReferencesRange". = ;
				SET refSegment.ns6:"OBX.8.AbnormalFlags" = '';
				--SET refSegment.ns6:"OBX.9.Probability". = ;
				SET refSegment.ns6:"OBX.10.NatureofAbnormalTest" = '';
				SET refSegment.ns6:"OBX.11.ObservationResultStatus" = 'F';
				--SET refSegment.ns6:"OBX.12.DateLastObservationNormalValue". = ;
				--SET refSegment.ns6:"OBX.13.UserDefinedAccessChecks". = ;
				--SET refSegment.ns6:"OBX.14.DateTimeoftheObservation". = ;
				--SET refSegment.ns6:"OBX.15.ProducersID". = ;
				--SET refSegment.ns6:"OBX.16.ResponsibleObserver". = ;
				--SET refSegment.ns6:"OBX.17.ObservationMethod". = ;
				--SET refSegment.ns6:"OBX.18.EquipmentInstanceIdentifier". = ;
				--SET refSegment.ns6:"OBX.19.DateTimeoftheAnalysis". = ;
				--SET refSegment.ns6:"OBX.23.PerformingOrganizationName". = ;
				--SET refSegment.ns6:"OBX.24.PerformingOrganizationAddress". = ;
				--SET refSegment.ns6:"OBX.25.PerformingOrganizationMedicalDirector". = ;
				--ATTACHMENT
				DECLARE refAttach REFERENCE TO refParameter;
				MOVE refAttach FIRSTCHILD NAME 'attachment';
				WHILE LASTMOVE(refAttach) DO
					IF refAttach.base64 IS NOT NULL THEN
						SET refSegment.ns6:"OBX.5.ObservationValue" = refParameter.value || '^mime^octet-stream^Base64^' || refAttach.base64;
						SET refSegment.ns6:"OBX.17.ObservationMethod".ns6:"CE.1" = refAttach.type;
					END IF;
					MOVE refAttach NEXTSIBLING REPEAT NAME;
				END WHILE;
		
				----------
				SET sequence = sequence + 1;
			END IF;
		END IF;
		MOVE refParameter NEXTSIBLING;
	END WHILE;

END;
	
CREATE PROCEDURE CreateOBXAttachment(IN refParameter REFERENCE, INOUT refHL7 REFERENCE) BEGIN
	--decomment to enable autocomplete: COMMENT BEFORE DEPLOYMENT!
	--DECLARE xmlModel REFERENCE TO InputRoot.XMLNSC.ns:senderRequest.writeParametersRequest.measurement.values;
	--CREA SEQUENZA OSSERVAZIONI OBX
	DECLARE sequence INTEGER 1;
	MOVE refParameter FIRSTCHILD NAME 'values';

	IF NULLIF(refParameter.value,'') IS NOT NULL OR LEFT(refParameter.measureId,4) = 'NINF' THEN
		FOR source AS refParameter.attachment[]  DO
			DECLARE refSegment REFERENCE TO refHL7;
			CREATE LASTCHILD OF refSegment AS refSegment NAMESPACE ns6 NAME 'anyHL7Segment';
			CREATE LASTCHILD OF refSegment AS refSegment NAMESPACE ns6 NAME 'OBX';
			
			SET refSegment.ns6:"OBX.1.SetIDOBX" = sequence;
			SET refSegment.ns6:"OBX.2.ValueType" = 'NM';
			SET refSegment.ns6:"OBX.3.ObservationIdentifier".ns6:"CE.1" = refParameter.measureId;
			SET refSegment.ns6:"OBX.3.ObservationIdentifier".ns6:"CE.2" = refParameter.measureName;
			SET refSegment.ns6:"OBX.3.ObservationIdentifier".ns6:"CE.3" = 'SRT';
			SET refSegment.ns6:"OBX.4.ObservationSubId" = source.id;
			SET refSegment.ns6:"OBX.5.ObservationValue" = COALESCE(refParameter.value,'') || '^mime^octet-stream^Base64^' || source.base64;
			IF (refParameter.units IS NOT NULL) THEN
				--SET OutputRoot.DFDL.ns6:HL7.ns6:anyHL7Segment[SEQUENCE + 4].ns6:OBX.ns6:"OBX.6.Units".ns6:"CE.1"  = xmlModel.units;
				SET refSegment.ns6:"OBX.6.Units".ns6:"CE.1"  = refParameter.units;
			END IF;
			--SET refSegment.ns6:"OBX.7.ReferencesRange". = ;
			SET refSegment.ns6:"OBX.8.AbnormalFlags" = '';
			--SET refSegment.ns6:"OBX.9.Probability". = ;
			SET refSegment.ns6:"OBX.10.NatureofAbnormalTest" = '';
			SET refSegment.ns6:"OBX.11.ObservationResultStatus" = 'F';
			SET refSegment.ns6:"OBX.17.ObservationMethod".ns6:"CE.1" = source.type;
			SET sequence = sequence + 1;
		END FOR;
	END IF;	
	
	
--	WHILE LASTMOVE(refParameter) DO
--		IF NULLIF(refParameter.value,'') IS NOT NULL THEN
--			--CREA OBX
--			DECLARE refSegment REFERENCE TO refHL7;
--			CREATE LASTCHILD OF refSegment AS refSegment NAMESPACE ns6 NAME 'anyHL7Segment';
--			CREATE LASTCHILD OF refSegment AS refSegment NAMESPACE ns6 NAME 'OBX';
--		
--			SET refSegment.ns6:"OBX.1.SetIDOBX" = sequence;
--			SET refSegment.ns6:"OBX.2.ValueType" = 'NM';
--			SET refSegment.ns6:"OBX.3.ObservationIdentifier".ns6:"CE.1" = refParameter.measureId;
--			SET refSegment.ns6:"OBX.3.ObservationIdentifier".ns6:"CE.2" = refParameter.measureName;
--			SET refSegment.ns6:"OBX.3.ObservationIdentifier".ns6:"CE.3" = 'SRT';
--			--SET refSegment.ns6:"OBX.4.ObservationSubId". = ;
--			SET refSegment.ns6:"OBX.5.ObservationValue" = refParameter.value;
--			IF (refParameter.units IS NOT NULL) THEN
--				--SET OutputRoot.DFDL.ns6:HL7.ns6:anyHL7Segment[SEQUENCE + 4].ns6:OBX.ns6:"OBX.6.Units".ns6:"CE.1"  = xmlModel.units;
--				SET refSegment.ns6:"OBX.6.Units".ns6:"CE.1"  = refParameter.units;
--			END IF;
--			--SET refSegment.ns6:"OBX.7.ReferencesRange". = ;
--			SET refSegment.ns6:"OBX.8.AbnormalFlags" = '';
--			--SET refSegment.ns6:"OBX.9.Probability". = ;
--			SET refSegment.ns6:"OBX.10.NatureofAbnormalTest" = '';
--			SET refSegment.ns6:"OBX.11.ObservationResultStatus" = 'F';
--			--SET refSegment.ns6:"OBX.12.DateLastObservationNormalValue". = ;
--			--SET refSegment.ns6:"OBX.13.UserDefinedAccessChecks". = ;
--			--SET refSegment.ns6:"OBX.14.DateTimeoftheObservation". = ;
--			--SET refSegment.ns6:"OBX.15.ProducersID". = ;
--			--SET refSegment.ns6:"OBX.16.ResponsibleObserver". = ;
--			--SET refSegment.ns6:"OBX.17.ObservationMethod". = ;
--			--SET refSegment.ns6:"OBX.18.EquipmentInstanceIdentifier". = ;
--			--SET refSegment.ns6:"OBX.19.DateTimeoftheAnalysis". = ;
--			--SET refSegment.ns6:"OBX.23.PerformingOrganizationName". = ;
--			--SET refSegment.ns6:"OBX.24.PerformingOrganizationAddress". = ;
--			--SET refSegment.ns6:"OBX.25.PerformingOrganizationMedicalDirector". = ;
--			--ATTACHMENT
--			DECLARE refAttach REFERENCE TO refParameter;
--			MOVE refAttach FIRSTCHILD NAME 'attachment';
--			WHILE LASTMOVE(refAttach) DO
--				IF refAttach.base64 IS NOT NULL THEN
--					SET refSegment.ns6:"OBX.5.ObservationValue" = refParameter.value || '^mime^octet-stream^Base64^' || refAttach.base64;
--					SET refSegment.ns6:"OBX.17.ObservationMethod".ns6:"CE.1" = refAttach.type;
--				END IF;
--				MOVE refAttach NEXTSIBLING REPEAT NAME;
--			END WHILE;
--	
--			----------
--			SET sequence = sequence + 1;
--		END IF;
--		MOVE refParameter NEXTSIBLING;
--	END WHILE;

END;

CREATE PROCEDURE CreateQRD(IN queryId CHARACTER, IN inModel REFERENCE, INOUT refHL7 REFERENCE) BEGIN
	DECLARE refSegment REFERENCE TO refHL7;
	CREATE LASTCHILD OF refSegment AS refSegment NAMESPACE ns6 NAME 'anyHL7Segment';
	CREATE LASTCHILD OF refSegment AS refSegment NAMESPACE ns6 NAME 'QRD';
	
	DECLARE refPatientKey REFERENCE TO inModel;
	MOVE refPatientKey FIRSTCHILD NAME 'patientKey'; 
	SET refSegment.ns6:"QRD.1.QueryDateTime".ns6:"TS.1" = CAST (CURRENT_TIMESTAMP AS CHARACTER FORMAT 'YYYYMMddHHmmss');
	--SET refSegment.ns6:"QRD.1.QueryDateTime".ns6:"TS.2" = '';
	SET refSegment.ns6:"QRD.2.QueryFormatCode" = 'R';
	SET refSegment.ns6:"QRD.3.QueryPriority" = 'I';
	SET queryId = COALESCE(NULLIF(queryId,''),GetUUID());
	SET refSegment.ns6:"QRD.4.QueryID" = queryId;
	--SET refSegment.ns6:"QRD.4.QueryID" = '123456789';
	--SET refSegment.ns6:"QRD.5.DeferredResponseType" = '';
	--SET refSegment.ns6:"QRD.6.DeferredResponseDateTime" = '';
	--SET refSegment.ns6:"QRD.7.QuantityLimitedRequest" = inModel.resourceLimit;
	SET refSegment.ns6:"QRD.7.QuantityLimitedRequest".ns6:"CQ.1" = refPatientKey.maxResult;
	SET refSegment.ns6:"QRD.8.WhoSubjectFilter".ns6:"XCN.1" = refPatientKey.patientId;
	SET refSegment.ns6:"QRD.9.WhatSubjectFilter".ns6:"CE.1" = 'RES';
	SET refSegment.ns6:"QRD.10.WhatDepartmentDataCode".ns6:"CE.1" = refPatientKey.nosologicId;
	SET refSegment.ns6:"QRD.10.WhatDepartmentDataCode".ns6:"CE.2" = refPatientKey.logistic.compartmentId;
	SET refSegment.ns6:"QRD.10.WhatDepartmentDataCode".ns6:"CE.3" = refPatientKey.logistic.roomId;
	SET refSegment.ns6:"QRD.10.WhatDepartmentDataCode".ns6:"CE.4" = refPatientKey.logistic.bedId;
	--SET refSegment.ns6:"QRD.11.WhatDataCodeValueQual" = '';
	IF (refPatientKey.attachment = 'true') THEN
		SET refSegment.ns6:"QRD.12.QueryResultsLevel" = 'T';	
	ELSEIF (refPatientKey.attachment = 'false') THEN
		SET refSegment.ns6:"QRD.12.QueryResultsLevel" = 'R';
	ELSE
		SET refSegment.ns6:"QRD.12.QueryResultsLevel" = '';
	END IF;
	

END;

CREATE PROCEDURE CreateQRF(IN inModel REFERENCE, INOUT refHL7 REFERENCE) BEGIN
	DECLARE refSegment REFERENCE TO refHL7;
	CREATE LASTCHILD OF refSegment AS refSegment NAMESPACE ns6 NAME 'anyHL7Segment';
	CREATE LASTCHILD OF refSegment AS refSegment NAMESPACE ns6 NAME 'QRF';

	DECLARE refParameters REFERENCE TO inModel;
	MOVE refParameters FIRSTCHILD NAME 'paramsId'; 
	
	SET refSegment.ns6:"QRF.1.WhereSubjectFilter" = 'CdC';
	--COMMENTI PER TEST 
--	SET refSegment.ns6:"QRF.2.WhenDataStartDateTime" = inModel.startDate;
--	SET refSegment.ns6:"QRF.3.WhenDataEndDateTime" = inModel.endDate;
--	--SET refSegment.ns6:"QRF.4.WhatUserQualifier" = '';
	--SET refSegment.ns6:"QRF.5.OtherQRYSubjectFilter" = COALESCE(inModel.subjectFilter,'ALL');
	WHILE LASTMOVE(refParameters) DO
		IF refSegment.ns6:"QRF.5.OtherQRYSubjectFilter" IS NULL THEN
			SET refSegment.ns6:"QRF.5.OtherQRYSubjectFilter" = refParameters;
		ELSE
			SET refSegment.ns6:"QRF.5.OtherQRYSubjectFilter" = refSegment.ns6:"QRF.5.OtherQRYSubjectFilter"|| ',' || refParameters;
		END IF;
		--SET refSegment.ns6:"QRF.5.OtherQRYSubjectFilter" = refParameters;
		MOVE refParameters NEXTSIBLING REPEAT NAME;
	END WHILE;
--	--SET refSegment.ns6:"QRF.6.WhichDateTimeQualifier" = '';
--	--SET refSegment.ns6:"QRF.7.WhichDateTimeStatusQualifier" = '';
--	--SET refSegment.ns6:"QRF.8.DateTimeSelectionQualifier" = '';
--	--SET refSegment.ns6:"QRF.9.WhenQuantityTimingQualifier" = '';
--	--SET refSegment.ns6:"QRF.10.SearchConfidenceThreshold" = '';
--	--SET refSegment.ns6:"EVN.1.EventTypeCode" = '';
--	SET refSegment.ns6:"EVN.2.RecordedDateTime".ns6:"TS.1" = CAST (CURRENT_TIMESTAMP AS CHARACTER FORMAT 'YYYYMMddHHmmss');
--	--SET refSegment.ns6:"EVN.3.DateTimePlannedEvent" = '';
--	--SET refSegment.ns6:"EVN.4.EventReasonCode" = '';
--	--SET refSegment.ns6:"EVN.5.OperatorID" = '';
--	SET refSegment.ns6:"EVN.6.EventOccurred".ns6:"TS.1" = CAST (CURRENT_TIMESTAMP AS CHARACTER FORMAT 'YYYYMMddHHmmss');
--	--SET refSegment.ns6:"EVN.7.EventFacility" = '';

END;


CREATE PROCEDURE CreateDG1(IN inModel REFERENCE, INOUT refHL7 REFERENCE) BEGIN
	DECLARE refSegment REFERENCE TO refHL7;
	CREATE LASTCHILD OF refSegment AS refSegment NAMESPACE ns6 NAME 'anyHL7Segment';
	CREATE LASTCHILD OF refSegment AS refSegment NAMESPACE ns6 NAME 'DG1';

	--SET refSegment.ns6:"DG1.1.SetIDDG1" = '';
	--SET refSegment.ns6:"DG1.2.DiagnosisCodingMethod" = '';
	SET refSegment.ns6:"DG1.3.DiagnosisCodeDG1".ns6:"CE.1" = 'CLIN1';
	SET refSegment.ns6:"DG1.3.DiagnosisCodeDG1".ns6:"CE.2" = 'DESC CLINICAL PATH';
	

END;