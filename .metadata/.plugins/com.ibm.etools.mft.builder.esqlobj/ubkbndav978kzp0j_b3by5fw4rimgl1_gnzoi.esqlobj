CREATE COMPUTE MODULE PrepareTasks
CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		--CALL CopyMessageHeaders();
		--CALL CopyEntireMessage();
		DECLARE response REFERENCE TO InputRoot.JSON.Data;
		
		MOVE response LASTCHILD;
		
		MOVE response FIRSTCHILD NAME 'data';	
		MOVE response FIRSTCHILD NAME 'taskList';
		MOVE response FIRSTCHILD NAME 'items';	
		
		SET OutputRoot.Properties = InputRoot.Properties;
--		DECLARE request REFERENCE TO InputRoot.XMLNSC.ns:receiverRequest;

		--SET OutputLocalEnvironment.Destination.HTTP.ReplyStatusCode = 200;

		--MAP MODEL TO JSON
--		MOVE request FIRSTCHILD;
		
--		IF LASTMOVE(request) THEN
			--MOVE request FIRSTCHILD;		
		DECLARE i INTEGER 1;
		FOR source AS response.Item[]  DO
			
			SET OutputRoot.JSON.Data.taskId = response.Item[i].taskId;
			SET OutputRoot.JSON.Data.taskType = response.Item[i].taskType;
			SET OutputRoot.JSON.Data.creationDate = response.Item[i].creationDate;
			SET OutputRoot.JSON.Data.patientType = response.Item[i].patientType;
			SET OutputRoot.JSON.Data.pathWayPhaseId = response.Item[i].pathWayPhaseId;
			SET OutputRoot.JSON.Data.instanceId = response.Item[i].pathWayInstanceId;
			SET OutputRoot.JSON.Data.taskIdSchedulation = response.Item[i].idSchedHospWT;
			SET OutputRoot.JSON.Data.bed = response.Item[i].bed;
			SET OutputRoot.JSON.Data.patientId = response.Item[i].patientId;
			SET OutputRoot.JSON.Data.nosologicId = response.Item[i].nosologicId;
			
			PROPAGATE TO TERMINAL 'out' FINALIZE NONE DELETE NONE;
			SET i = i + 1;
		END FOR;
		
		PROPAGATE TO TERMINAL 'out1' FINALIZE NONE;
		RETURN FALSE;
--			RETURN TRUE;
--		END IF;
		

		--SET OutputLocalEnvironment.Destination.HTTP.ReplyStatusCode = 200;
		--RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;