/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		CALL CopyMessageHeaders();
		--CALL CopyEntireMessage();

		DECLARE response REFERENCE TO InputRoot.XMLNSC.ns:senderResponse;
		DECLARE errorResponse REFERENCE TO InputRoot.XMLNSC.ns:senderResponse;
		--GESTIONE ERRORE
		MOVE errorResponse FIRSTCHILD NAME 'error';
		IF LASTMOVE(errorResponse) THEN
			SET OutputLocalEnvironment.Destination.HTTP.ReplyStatusCode = 400;
			SET OutputRoot.JSON.Data.errorCode = errorResponse.errorCode;
			SET OutputRoot.JSON.Data.errorMessage = errorResponse.errorMessage;
			RETURN TRUE;
		END IF; 

		SET OutputLocalEnvironment.Destination.HTTP.ReplyStatusCode = 200;

		--MAP MODEL TO JSON
		MOVE response FIRSTCHILD;

		IF LASTMOVE(response) THEN
			MOVE response FIRSTCHILD NAMESPACE ns NAME 'parameter';	
			--array di misurazioni
			DECLARE refOutJSON REFERENCE TO OutputRoot;
			DECLARE refMeasures REFERENCE TO OutputRoot;
			CREATE FIELD OutputRoot.JSON.Data AS refOutJSON IDENTITY (JSON.Array)Data;
			DECLARE ind INTEGER 1;
 			WHILE LASTMOVE(response) DO
 				CREATE LASTCHILD OF refOutJSON AS refMeasures NAME 'Item';
 				CREATE LASTCHILD OF refMeasures TYPE NameValue NAME 'id' VALUE response.id;
 				CREATE LASTCHILD OF refMeasures TYPE NameValue NAME 'taskId' VALUE response.taskId;
				--loop over values of a measurement	
				DECLARE refValues REFERENCE TO response;
				MOVE refValues FIRSTCHILD NAMESPACE ns NAME 'values';
				DECLARE ind2 INTEGER 1;
				DECLARE refOutValues REFERENCE TO OutputRoot;
				CREATE LASTCHILD OF refMeasures AS refMeasures IDENTITY (JSON.Array)values;	
	 			WHILE LASTMOVE(refValues) DO
	 				CREATE LASTCHILD OF refMeasures AS refOutValues NAME 'Item';
	 								
					CREATE LASTCHILD OF refOutValues TYPE NameValue NAME 'measureId' VALUE refValues.measureId;
					CREATE LASTCHILD OF refOutValues TYPE NameValue NAME 'measureName' VALUE refValues.measureName;
					CREATE LASTCHILD OF refOutValues TYPE NameValue NAME 'value' VALUE refValues.value;
					--CREATE LASTCHILD OF OutputRoot.JSON.Data.values[ind2] TYPE NameValue NAME 'value' VALUE response.values[ind].value;
	--				CREATE LASTCHILD OF OutputRoot.JSON.Data.values[ind2] TYPE NameValue NAME 'units' VALUE response.values[ind].units;
	--				CREATE LASTCHILD OF OutputRoot.JSON.Data.values[ind2] TYPE NameValue NAME 'type' VALUE response.values[ind].type;
					
					SET ind2 = ind2 + 1;
					MOVE refValues NEXTSIBLING;
	 			END WHILE;
				SET ind = ind + 1;
				MOVE response NEXTSIBLING;
	 		END WHILE;
			RETURN TRUE;
		END IF;
		


		SET OutputLocalEnvironment.Destination.HTTP.ReplyStatusCode = 200;
		--CREATE LASTCHILD OF OutputRoot Domain('JSON');
		--SET OutputRoot.JSON.Data.ns:senderResponse.error.errorCode = 1;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;


