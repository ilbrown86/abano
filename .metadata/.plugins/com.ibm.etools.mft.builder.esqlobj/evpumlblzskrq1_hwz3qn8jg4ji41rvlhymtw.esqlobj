CREATE COMPUTE MODULE issuAdd_MapToXMLModel
CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		--CALL CopyEntireMessage();

		DECLARE patientId CHARACTER;
		SET patientId = InputLocalEnvironment.REST.Input.Parameters.patientId;
		DECLARE nosologicId CHARACTER;
		SET nosologicId = InputLocalEnvironment.REST.Input.Parameters.nosologicId;
		
		DECLARE outputMessage REFERENCE TO OutputRoot; 
		DECLARE outPatientKey REFERENCE TO OutputRoot;
		DECLARE outParameters REFERENCE TO OutputRoot;
		DECLARE outValues REFERENCE TO OutputRoot;
		 
		CREATE LASTCHILD OF OutputRoot AS outputMessage DOMAIN('XMLNSC') NAME 'XMLNSC';
		CREATE FIRSTCHILD OF outputMessage as outputMessage NAMESPACE ns NAME 'senderRequest';
		
		DECLARE msgId CHARACTER InputLocalEnvironment.Destination.HTTP.RequestIdentifier;
		SET msgId = REPLACE(msgId,'''','');
		SET msgId = 'G' || msgId;
		SET outputMessage.messageId = msgId;
		
		SET outputMessage.action = InputLocalEnvironment.REST.Input.Operation;
		CREATE LASTCHILD OF outputMessage AS outputMessage NAME 'writeParametersRequest';
		CREATE LASTCHILD OF outputMessage AS outPatientKey NAME 'patient';
		SET outPatientKey.patientIdentifierList = patientId;
		SET outPatientKey.nosologicId = nosologicId;
		--lista parametri
		CREATE LASTCHILD OF outputMessage AS outParameters NAME 'parameter';
		SET outParameters.taskId = InputRoot.JSON.Data.taskId;
		SET outParameters.id = COALESCE(NULLIF(InputRoot.JSON.Data.id,''), CAST (CURRENT_TIMESTAMP AS CHARACTER FORMAT 'YYYYMMddHHmmss'));
		SET outParameters.userId = InputRoot.JSON.Data.userId;
		SET outParameters.date = CAST(CURRENT_TIMESTAMP AS CHARACTER FORMAT 'YYYYMMddHHmmss');
		
		SET InputLocalEnvironment.REST.Input.Parameters.idSchedulationHospitalization = InputRoot.JSON.Data.idSchedulationHospitalization;
		SET InputLocalEnvironment.REST.Input.Parameters.raisedIssueMessageNewValue = InputRoot.JSON.Data.description;
		
		
		CREATE LASTCHILD OF outParameters AS outValues NAME 'values';
		SET outValues.measureId = 'IINF001';				
		SET outValues.measureName = 'Issue' || InputRoot.JSON.Data.id;				
		SET outValues.value = InputRoot.JSON.Data.description;

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;