/*EATE FUNCTION Main() RETURNS BOOLE*/
	BEGIN
		--CALL CopyMessageHeaders();
		--CALL CopyEntireMessage();
		SET OutputRoot.Properties = InputRoot.Properties;
		DECLARE request REFERENCE TO InputRoot.XMLNSC.ns:receiverRequest;

		--SET OutputLocalEnvironment.Destination.HTTP.ReplyStatusCode = 200;

		--MAP MODEL TO JSON
		MOVE request FIRSTCHILD;
		
		IF LASTMOVE(request) THEN
			--MOVE request FIRSTCHILD;		
			SET OutputRoot.JSON.Data.nosologicId = request.admission.nosologicId;
			SET OutputRoot.JSON.Data.name = request.name;
			SET OutputRoot.JSON.Data.surname = request.surname;
			SET OutputRoot.JSON.Data.dischargeDate = request.dischargeDate;
			SET OutputRoot.JSON.Data.diagnosis = SUBSTRING(request.diagnosis BEFORE '-');
			SET OutputRoot.JSON.Data.diagnosisID = request.diagnosisID;
			IF NULLIF(request.admission.bedNumber, '') IS NOT NULL THEN
				SET OutputRoot.JSON.Data.bedNumber = request.admission.bedNumber;
			ELSE
				SET OutputRoot.JSON.Data.bedNumber = '';
			END IF;
			
			IF NULLIF(request.admission.division, '') IS NOT NULL THEN
				SET OutputRoot.JSON.Data.division = request.admission.division;
			ELSE
				SET OutputRoot.JSON.Data.division = '';
			END IF;			
			
			SET OutputRoot.JSON.Data.class = request.admission.class;
			SET OutputRoot.JSON.Data.birthdate = request.birthdate;
			SET OutputRoot.JSON.Data.sex = request.sex;
			SET OutputRoot.JSON.Data.race = request.race;
			SET OutputRoot.JSON.Data.address = request.address;
			SET OutputRoot.JSON.Data.fiscalcode = request.fiscalcode;
			SET OutputRoot.JSON.Data.admissionDate = request.admission.admissionDate;
			SET OutputRoot.JSON.Data.surgeryDate = request.surgeryDate;
			SET OutputRoot.JSON.Data.pid = request.patientIdentifierList;
			SET OutputRoot.JSON.Data.eventADT = request.eventADT;
			
			RETURN TRUE;
		END IF;
		

		--SET OutputLocalEnvironment.Destination.HTTP.ReplyStatusCode = 200;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
